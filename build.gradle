buildscript {
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}

plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version = '1.0'
group = 'dev.radon.naruto_universe' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'NarutoUniverse'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

mixin {
    add sourceSets.main, 'naruto_universe.mixin.refmap.json'
    config 'naruto_universe.mixin.json'
}

minecraft {
    mappings channel: 'parchment', version: '2022.11.27-1.19.2'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                naruto_universe {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                naruto_universe {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.0'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.19:3.1.39')
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Naruto Universe",
                "Specification-Vendor"    : "Radon",
                "Specification-Version"   : "${project.version}",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${project.version}",
                "Implementation-Vendor"   : "Radon",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
